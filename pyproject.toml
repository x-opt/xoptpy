[tool.poetry]
name = "xoptpy"
version = "0.1.1"
description = "eXtreme OPTimization - More optimizing agentic AI"
authors = ["Jake Derry"]
readme = "README.md"
homepage = "https://github.com/x-opt/xoptpy"
repository = "https://github.com/x-opt/xoptpy"
documentation = "https://docs.xopt.ai"
keywords = ["optimization", "ai", "agentic", "llm", "agents"]
packages = [{include = "xopt"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
click = "^8.1.0"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.0.0"
requests = "^2.31.0"
pyyaml = "^6.0.0"
litellm = "^1.74.9"

# Optional dependencies for different features
numpy = { version = "^1.21.0", optional = true }
pandas = { version = "^2.1.0", optional = true }
langchain = { version = "^0.2.0", optional = true }
langchain-core = { version = "^0.2.0", optional = true }
langchain-openai = { version = "^0.1.0", optional = true }
langchain-anthropic = { version = "^0.1.0", optional = true }
langchain-ollama = { version = "^0.1.0", optional = true }
dspy = { version = "^2.4.0", optional = true }
langgraph = { version = "^0.2.0", optional = true }
mlflow = { version = "^2.0.0", optional = true }

# Document processing
pypdf2 = { version = "^3.0.0", optional = true }
python-docx = { version = "^0.8.11", optional = true }

# Web scraping and APIs
beautifulsoup4 = { version = "^4.11.0", optional = true }

# Vector databases and embeddings
faiss-cpu = { version = "^1.7.4", optional = true }
sentence-transformers = { version = "^2.2.0", optional = true }
toml = "^0.10.2"

[tool.poetry.extras]
numpy = ["numpy"]
pandas = ["pandas", "numpy"]
openai = ["langchain-openai"]
anthropic = ["langchain-anthropic"]
ollama = ["langchain-ollama"]
llm = ["langchain", "langchain-core", "langchain-openai", "langchain-anthropic", "langchain-ollama"]
dspy = ["dspy"]
langgraph = ["langgraph"]
mlflow = ["mlflow", "numpy", "pandas"]
docs = ["pypdf2", "python-docx"]
web = ["requests", "beautifulsoup4"]
embeddings = ["faiss-cpu", "sentence-transformers", "numpy"]
all = [
    "numpy", "pandas", "langchain", "langchain-core", "langchain-openai", "langchain-anthropic",
    "dspy", "langgraph", "mlflow", 
    "pypdf2", "python-docx",
    "requests", "beautifulsoup4",
    "faiss-cpu", "sentence-transformers"
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"
pyinstaller = "^6.14.2"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.1.0"
sphinx-rtd-theme = "^1.3.0"
myst-parser = "^2.0.0"

[tool.poetry.scripts]
xopt = "xopt.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]